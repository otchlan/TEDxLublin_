services:
  web:
    container_name: django_web
    build:
      context: ./tedxlublin
      dockerfile: Dockerfile.prod
    command: gunicorn --config gunicorn_config.py tedxlublin.wsgi:application
    restart: always
    expose:
      - "8000"
    env_file:
      - ./.env.prod
    volumes:
      - static_volume:/home/www/tedxlublin/staticfiles
      - /var/certbot/conf:/etc/letsencrypt:ro
    environment:
      - APP_ENV=prod

  nginx:
    container_name: nginx_proxy
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/home/www/tedxlublin/staticfiles
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - web-root:/var/www/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - web

  certbot:
    image: certbot/certbot:latest
    volumes:
      - web-root:/var/www/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/html --email artpods56@gmail.com --agree-tos --non-interactive -d tedxlublin.org -d www.tedxlublin.org
  
  postgres:
    image: postgres:latest
    container_name: postgres-database
    ports:
      - 5432:5432
    restart: always
    env_file: .env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4
    ports:
      - 5050:80
    env_file: .env.prod
    restart: always

volumes:
  static_volume:
  certbot-etc:
  certbot-var:
  web-root:
  postgres_data:
